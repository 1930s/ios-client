//
// FilesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class FilesAPI {
    /**
     Download file
     
     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiFilesByIdGet(id: UUID, completion: @escaping ((_ error: Error?) -> Void)) {
        apiFilesByIdGetWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Download file
     - GET /api/files/{id}
     
     - parameter id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func apiFilesByIdGetWithRequestBuilder(id: UUID) -> RequestBuilder<Void> {
        var path = "/api/files/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Download file
     
     - parameter id: (query)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiFilesGet(id: UUID, completion: @escaping ((_ error: Error?) -> Void)) {
        apiFilesGetWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Download file
     - GET /api/files
     
     - parameter id: (query)  

     - returns: RequestBuilder<Void> 
     */
    open class func apiFilesGetWithRequestBuilder(id: UUID) -> RequestBuilder<Void> {
        let path = "/api/files"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "id": id
        ])
        

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Upload file
     
     - parameter uploadedFile: (form) Upload File 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiFilesUploadPost(uploadedFile: URL, completion: @escaping ((_ data: UploadResult?,_ error: Error?) -> Void)) {
        apiFilesUploadPostWithRequestBuilder(uploadedFile: uploadedFile).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Upload file
     - POST /api/files/upload
     - examples: [{contentType=application/json, example={
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
}}]
     
     - parameter uploadedFile: (form) Upload File 

     - returns: RequestBuilder<UploadResult> 
     */
    open class func apiFilesUploadPostWithRequestBuilder(uploadedFile: URL) -> RequestBuilder<UploadResult> {
        let path = "/api/files/upload"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "uploadedFile": uploadedFile
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<UploadResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
