//
// WalletAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class WalletAPI {
    /**

     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func v10WalletAddressesGet(authorization: String, completion: @escaping ((_ data: WalletsInfo?,_ error: Error?) -> Void)) {
        v10WalletAddressesGetWithRequestBuilder(authorization: authorization).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /v1.0/wallet/addresses
     - examples: [{contentType=application/json, example={
  "wallets" : [ {
    "rateToGVT" : 0.8008281904610115,
    "address" : "address",
    "description" : "description",
    "logo" : "logo",
    "currency" : "ETH"
  }, {
    "rateToGVT" : 0.8008281904610115,
    "address" : "address",
    "description" : "description",
    "logo" : "logo",
    "currency" : "ETH"
  } ]
}}]
     
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<WalletsInfo> 
     */
    open class func v10WalletAddressesGetWithRequestBuilder(authorization: String) -> RequestBuilder<WalletsInfo> {
        let path = "/v1.0/wallet/addresses"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<WalletsInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     * enum for parameter currency
     */
    public enum Currency_v10WalletByCurrencyGet: String { 
        case eth = "ETH"
        case gvt = "GVT"
        case btc = "BTC"
        case undefined = "Undefined"
        case ada = "ADA"
        case usd = "USD"
        case eur = "EUR"
    }

    /**
     Wallet summary
     
     - parameter currency: (path)  
     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func v10WalletByCurrencyGet(currency: Currency_v10WalletByCurrencyGet, authorization: String, completion: @escaping ((_ data: WalletSummary?,_ error: Error?) -> Void)) {
        v10WalletByCurrencyGetWithRequestBuilder(currency: currency, authorization: authorization).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Wallet summary
     - GET /v1.0/wallet/{currency}
     - examples: [{contentType=application/json, example={
  "totalBalanceCurrency" : 6.027456183070403,
  "availableCurrency" : 2.3021358869347655,
  "investedCurrency" : 5.962133916683182,
  "availableGVT" : 5.637376656633329,
  "investedGVT" : 1.4658129805029452,
  "totalBalanceGVT" : 0.8008281904610115
}}]
     
     - parameter currency: (path)  
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<WalletSummary> 
     */
    open class func v10WalletByCurrencyGetWithRequestBuilder(currency: Currency_v10WalletByCurrencyGet, authorization: String) -> RequestBuilder<WalletSummary> {
        var path = "/v1.0/wallet/{currency}"
        path = path.replacingOccurrences(of: "{currency}", with: "\(currency.rawValue)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<WalletSummary>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     * enum for parameter assetType
     */
    public enum AssetType_v10WalletTransactionsGet: String { 
        case all = "All"
        case program = "Program"
        case fund = "Fund"
    }

    /**
     * enum for parameter txAction
     */
    public enum TxAction_v10WalletTransactionsGet: String { 
        case transfer = "Transfer"
        case programOpen = "ProgramOpen"
        case programProfit = "ProgramProfit"
        case programInvest = "ProgramInvest"
        case programWithdrawal = "ProgramWithdrawal"
        case programRefundPartialExecution = "ProgramRefundPartialExecution"
        case programRefundClose = "ProgramRefundClose"
        case programRequestInvest = "ProgramRequestInvest"
        case programRequestWithdrawal = "ProgramRequestWithdrawal"
        case programRequestCancel = "ProgramRequestCancel"
    }

    /**
     Wallet transactions
     
     - parameter authorization: (header) JWT access token 
     - parameter assetId: (query)  (optional)
     - parameter from: (query)  (optional)
     - parameter to: (query)  (optional)
     - parameter assetType: (query)  (optional)
     - parameter txAction: (query)  (optional)
     - parameter skip: (query)  (optional)
     - parameter take: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func v10WalletTransactionsGet(authorization: String, assetId: UUID? = nil, from: Date? = nil, to: Date? = nil, assetType: AssetType_v10WalletTransactionsGet? = nil, txAction: TxAction_v10WalletTransactionsGet? = nil, skip: Int? = nil, take: Int? = nil, completion: @escaping ((_ data: WalletTransactionsViewModel?,_ error: Error?) -> Void)) {
        v10WalletTransactionsGetWithRequestBuilder(authorization: authorization, assetId: assetId, from: from, to: to, assetType: assetType, txAction: txAction, skip: skip, take: take).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Wallet transactions
     - GET /v1.0/wallet/transactions
     - examples: [{contentType=application/json, example={
  "total" : 5,
  "transactions" : [ {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "sourceId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "number" : 1,
    "amount" : 0.8008281904610115,
    "amountConverted" : 6.027456183070403,
    "sourceType" : "Wallet",
    "action" : "Transfer",
    "destinationType" : "Wallet",
    "destinationCurrency" : "ETH",
    "sourceCurrency" : "ETH",
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "destinationId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
  }, {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "sourceId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "number" : 1,
    "amount" : 0.8008281904610115,
    "amountConverted" : 6.027456183070403,
    "sourceType" : "Wallet",
    "action" : "Transfer",
    "destinationType" : "Wallet",
    "destinationCurrency" : "ETH",
    "sourceCurrency" : "ETH",
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "destinationId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
  } ]
}}]
     
     - parameter authorization: (header) JWT access token 
     - parameter assetId: (query)  (optional)
     - parameter from: (query)  (optional)
     - parameter to: (query)  (optional)
     - parameter assetType: (query)  (optional)
     - parameter txAction: (query)  (optional)
     - parameter skip: (query)  (optional)
     - parameter take: (query)  (optional)

     - returns: RequestBuilder<WalletTransactionsViewModel> 
     */
    open class func v10WalletTransactionsGetWithRequestBuilder(authorization: String, assetId: UUID? = nil, from: Date? = nil, to: Date? = nil, assetType: AssetType_v10WalletTransactionsGet? = nil, txAction: TxAction_v10WalletTransactionsGet? = nil, skip: Int? = nil, take: Int? = nil) -> RequestBuilder<WalletTransactionsViewModel> {
        let path = "/v1.0/wallet/transactions"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "AssetId": assetId, 
            "From": from?.encodeToJSON(), 
            "To": to?.encodeToJSON(), 
            "AssetType": assetType?.rawValue, 
            "TxAction": txAction?.rawValue, 
            "Skip": skip?.encodeToJSON(), 
            "Take": take?.encodeToJSON()
        ])
        
        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<WalletTransactionsViewModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func v10WalletWithdrawInfoGet(authorization: String, completion: @escaping ((_ data: WithdrawalSummary?,_ error: Error?) -> Void)) {
        v10WalletWithdrawInfoGetWithRequestBuilder(authorization: authorization).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /v1.0/wallet/withdraw/info
     - examples: [{contentType=application/json, example={
  "wallets" : [ {
    "rateToGvt" : 1.4658129805029452,
    "description" : "description",
    "logo" : "logo",
    "currency" : "ETH",
    "commission" : 6.027456183070403
  }, {
    "rateToGvt" : 1.4658129805029452,
    "description" : "description",
    "logo" : "logo",
    "currency" : "ETH",
    "commission" : 6.027456183070403
  } ],
  "availableToWithdrawal" : 0.8008281904610115
}}]
     
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<WithdrawalSummary> 
     */
    open class func v10WalletWithdrawInfoGetWithRequestBuilder(authorization: String) -> RequestBuilder<WithdrawalSummary> {
        let path = "/v1.0/wallet/withdraw/info"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<WithdrawalSummary>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter txId: (path)  
     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func v10WalletWithdrawRequestCancelByTxIdPost(txId: UUID, authorization: String, completion: @escaping ((_ error: Error?) -> Void)) {
        v10WalletWithdrawRequestCancelByTxIdPostWithRequestBuilder(txId: txId, authorization: authorization).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - POST /v1.0/wallet/withdraw/request/cancel/{txId}
     
     - parameter txId: (path)  
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<Void> 
     */
    open class func v10WalletWithdrawRequestCancelByTxIdPostWithRequestBuilder(txId: UUID, authorization: String) -> RequestBuilder<Void> {
        var path = "/v1.0/wallet/withdraw/request/cancel/{txId}"
        path = path.replacingOccurrences(of: "{txId}", with: "\(txId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter requestId: (query)  (optional)
     - parameter code: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func v10WalletWithdrawRequestConfirmPost(requestId: UUID? = nil, code: String? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        v10WalletWithdrawRequestConfirmPostWithRequestBuilder(requestId: requestId, code: code).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - POST /v1.0/wallet/withdraw/request/confirm
     
     - parameter requestId: (query)  (optional)
     - parameter code: (query)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func v10WalletWithdrawRequestConfirmPostWithRequestBuilder(requestId: UUID? = nil, code: String? = nil) -> RequestBuilder<Void> {
        let path = "/v1.0/wallet/withdraw/request/confirm"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "requestId": requestId, 
            "code": code
        ])
        

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter authorization: (header) JWT access token 
     - parameter model: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func v10WalletWithdrawRequestNewPost(authorization: String, model: CreateWithdrawalRequestModel? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        v10WalletWithdrawRequestNewPostWithRequestBuilder(authorization: authorization, model: model).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - POST /v1.0/wallet/withdraw/request/new
     
     - parameter authorization: (header) JWT access token 
     - parameter model: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func v10WalletWithdrawRequestNewPostWithRequestBuilder(authorization: String, model: CreateWithdrawalRequestModel? = nil) -> RequestBuilder<Void> {
        let path = "/v1.0/wallet/withdraw/request/new"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter txId: (path)  
     - parameter authorization: (header) JWT access token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func v10WalletWithdrawRequestResendByTxIdPost(txId: UUID, authorization: String, completion: @escaping ((_ error: Error?) -> Void)) {
        v10WalletWithdrawRequestResendByTxIdPostWithRequestBuilder(txId: txId, authorization: authorization).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - POST /v1.0/wallet/withdraw/request/resend/{txId}
     
     - parameter txId: (path)  
     - parameter authorization: (header) JWT access token 

     - returns: RequestBuilder<Void> 
     */
    open class func v10WalletWithdrawRequestResendByTxIdPostWithRequestBuilder(txId: UUID, authorization: String) -> RequestBuilder<Void> {
        var path = "/v1.0/wallet/withdraw/request/resend/{txId}"
        path = path.replacingOccurrences(of: "{txId}", with: "\(txId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
