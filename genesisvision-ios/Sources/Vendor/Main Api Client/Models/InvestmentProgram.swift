//
// InvestmentProgram.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class InvestmentProgram: Codable {

    public var manager: ProfilePublicViewModel?
    public var investment: Investment?
    public var account: ManagerAccount?
    public var token: ManagerToken?


    
    public init(manager: ProfilePublicViewModel?, investment: Investment?, account: ManagerAccount?, token: ManagerToken?) {
        self.manager = manager
        self.investment = investment
        self.account = account
        self.token = token
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(manager, forKey: "manager")
        try container.encodeIfPresent(investment, forKey: "investment")
        try container.encodeIfPresent(account, forKey: "account")
        try container.encodeIfPresent(token, forKey: "token")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        manager = try container.decodeIfPresent(ProfilePublicViewModel.self, forKey: "manager")
        investment = try container.decodeIfPresent(Investment.self, forKey: "investment")
        account = try container.decodeIfPresent(ManagerAccount.self, forKey: "account")
        token = try container.decodeIfPresent(ManagerToken.self, forKey: "token")
    }
}

