//
// Review.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class Review: Codable {

    public var moderationComment: String?
    public var clientComment: String?
    public var reviewAnswer: String?
    public var rejectLabels: [String]?
    public var reviewRejectType: String?


    
    public init(moderationComment: String?, clientComment: String?, reviewAnswer: String?, rejectLabels: [String]?, reviewRejectType: String?) {
        self.moderationComment = moderationComment
        self.clientComment = clientComment
        self.reviewAnswer = reviewAnswer
        self.rejectLabels = rejectLabels
        self.reviewRejectType = reviewRejectType
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(moderationComment, forKey: "moderationComment")
        try container.encodeIfPresent(clientComment, forKey: "clientComment")
        try container.encodeIfPresent(reviewAnswer, forKey: "reviewAnswer")
        try container.encodeIfPresent(rejectLabels, forKey: "rejectLabels")
        try container.encodeIfPresent(reviewRejectType, forKey: "reviewRejectType")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        moderationComment = try container.decodeIfPresent(String.self, forKey: "moderationComment")
        clientComment = try container.decodeIfPresent(String.self, forKey: "clientComment")
        reviewAnswer = try container.decodeIfPresent(String.self, forKey: "reviewAnswer")
        rejectLabels = try container.decodeIfPresent([String].self, forKey: "rejectLabels")
        reviewRejectType = try container.decodeIfPresent(String.self, forKey: "reviewRejectType")
    }
}

