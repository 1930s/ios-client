//
// WalletTransaction.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class WalletTransaction: Codable {

    public enum ModelType: String, Codable { 
        case deposit = "Deposit"
        case withdraw = "Withdraw"
        case openProgram = "OpenProgram"
        case investToProgram = "InvestToProgram"
        case withdrawFromProgram = "WithdrawFromProgram"
    }
    public var id: UUID?
    public var type: ModelType?
    public var amount: Double?
    public var date: Date?


    
    public init(id: UUID?, type: ModelType?, amount: Double?, date: Date?) {
        self.id = id
        self.type = type
        self.amount = amount
        self.date = date
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(type, forKey: "type")
        try container.encodeIfPresent(amount, forKey: "amount")
        try container.encodeIfPresent(date, forKey: "date")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decodeIfPresent(UUID.self, forKey: "id")
        type = try container.decodeIfPresent(ModelType.self, forKey: "type")
        amount = try container.decodeIfPresent(Double.self, forKey: "amount")
        date = try container.decodeIfPresent(Date.self, forKey: "date")
    }
}

