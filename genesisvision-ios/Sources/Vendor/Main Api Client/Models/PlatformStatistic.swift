//
// PlatformStatistic.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class PlatformStatistic: Codable {

    public var managers: Int?
    public var investors: Int?
    public var profitWeek: Double?
    public var investmentAmount: Double?
    public var totalInvestorsProfit: Double?
    public var totalProfit: Double?


    
    public init(managers: Int?, investors: Int?, profitWeek: Double?, investmentAmount: Double?, totalInvestorsProfit: Double?, totalProfit: Double?) {
        self.managers = managers
        self.investors = investors
        self.profitWeek = profitWeek
        self.investmentAmount = investmentAmount
        self.totalInvestorsProfit = totalInvestorsProfit
        self.totalProfit = totalProfit
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(managers, forKey: "managers")
        try container.encodeIfPresent(investors, forKey: "investors")
        try container.encodeIfPresent(profitWeek, forKey: "profitWeek")
        try container.encodeIfPresent(investmentAmount, forKey: "investmentAmount")
        try container.encodeIfPresent(totalInvestorsProfit, forKey: "totalInvestorsProfit")
        try container.encodeIfPresent(totalProfit, forKey: "totalProfit")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        managers = try container.decodeIfPresent(Int.self, forKey: "managers")
        investors = try container.decodeIfPresent(Int.self, forKey: "investors")
        profitWeek = try container.decodeIfPresent(Double.self, forKey: "profitWeek")
        investmentAmount = try container.decodeIfPresent(Double.self, forKey: "investmentAmount")
        totalInvestorsProfit = try container.decodeIfPresent(Double.self, forKey: "totalInvestorsProfit")
        totalProfit = try container.decodeIfPresent(Double.self, forKey: "totalProfit")
    }
}

