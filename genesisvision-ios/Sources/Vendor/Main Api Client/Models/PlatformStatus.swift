//
// PlatformStatus.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class PlatformStatus: Codable {

    public var isTournamentActive: Bool?
    public var isTournamentRegistrationActive: Bool?
    public var tournamentCurrentRound: Int?
    public var tournamentTotalRounds: Int?


    
    public init(isTournamentActive: Bool?, isTournamentRegistrationActive: Bool?, tournamentCurrentRound: Int?, tournamentTotalRounds: Int?) {
        self.isTournamentActive = isTournamentActive
        self.isTournamentRegistrationActive = isTournamentRegistrationActive
        self.tournamentCurrentRound = tournamentCurrentRound
        self.tournamentTotalRounds = tournamentTotalRounds
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(isTournamentActive, forKey: "isTournamentActive")
        try container.encodeIfPresent(isTournamentRegistrationActive, forKey: "isTournamentRegistrationActive")
        try container.encodeIfPresent(tournamentCurrentRound, forKey: "tournamentCurrentRound")
        try container.encodeIfPresent(tournamentTotalRounds, forKey: "tournamentTotalRounds")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        isTournamentActive = try container.decodeIfPresent(Bool.self, forKey: "isTournamentActive")
        isTournamentRegistrationActive = try container.decodeIfPresent(Bool.self, forKey: "isTournamentRegistrationActive")
        tournamentCurrentRound = try container.decodeIfPresent(Int.self, forKey: "tournamentCurrentRound")
        tournamentTotalRounds = try container.decodeIfPresent(Int.self, forKey: "tournamentTotalRounds")
    }
}

