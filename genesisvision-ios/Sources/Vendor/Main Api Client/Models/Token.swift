//
// Token.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class Token: Codable {

    public var tokenName: String?
    public var tokenSymbol: String?
    public var initialPrice: Double?


    
    public init(tokenName: String?, tokenSymbol: String?, initialPrice: Double?) {
        self.tokenName = tokenName
        self.tokenSymbol = tokenSymbol
        self.initialPrice = initialPrice
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(tokenName, forKey: "tokenName")
        try container.encodeIfPresent(tokenSymbol, forKey: "tokenSymbol")
        try container.encodeIfPresent(initialPrice, forKey: "initialPrice")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        tokenName = try container.decodeIfPresent(String.self, forKey: "tokenName")
        tokenSymbol = try container.decodeIfPresent(String.self, forKey: "tokenSymbol")
        initialPrice = try container.decodeIfPresent(Double.self, forKey: "initialPrice")
    }
}

