//
// TradesViewModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class TradesViewModel: Codable {

    public enum TradeServerType: String, Codable { 
        case undefined = "Undefined"
        case metaTrader4 = "MetaTrader4"
        case metaTrader5 = "MetaTrader5"
        case ninjaTrader = "NinjaTrader"
        case ctrader = "cTrader"
        case rumus = "Rumus"
        case metastock = "Metastock"
    }
    public var trades: [OrderModel]?
    public var total: Int?
    public var tradeServerType: TradeServerType?


    
    public init(trades: [OrderModel]?, total: Int?, tradeServerType: TradeServerType?) {
        self.trades = trades
        self.total = total
        self.tradeServerType = tradeServerType
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(trades, forKey: "trades")
        try container.encodeIfPresent(total, forKey: "total")
        try container.encodeIfPresent(tradeServerType, forKey: "tradeServerType")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        trades = try container.decodeIfPresent([OrderModel].self, forKey: "trades")
        total = try container.decodeIfPresent(Int.self, forKey: "total")
        tradeServerType = try container.decodeIfPresent(TradeServerType.self, forKey: "tradeServerType")
    }
}

