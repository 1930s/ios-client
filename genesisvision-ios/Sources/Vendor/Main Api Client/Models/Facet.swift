//
// Facet.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class Facet: Codable {

    public var id: UUID?
    public var title: String?
    public var description: String?
    public var logo: String?
    public var count: Int?


    
    public init(id: UUID?, title: String?, description: String?, logo: String?, count: Int?) {
        self.id = id
        self.title = title
        self.description = description
        self.logo = logo
        self.count = count
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(title, forKey: "title")
        try container.encodeIfPresent(description, forKey: "description")
        try container.encodeIfPresent(logo, forKey: "logo")
        try container.encodeIfPresent(count, forKey: "count")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decodeIfPresent(UUID.self, forKey: "id")
        title = try container.decodeIfPresent(String.self, forKey: "title")
        description = try container.decodeIfPresent(String.self, forKey: "description")
        logo = try container.decodeIfPresent(String.self, forKey: "logo")
        count = try container.decodeIfPresent(Int.self, forKey: "count")
    }
}

