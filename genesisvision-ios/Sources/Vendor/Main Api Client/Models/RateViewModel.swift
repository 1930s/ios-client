//
// RateViewModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class RateViewModel: Codable {

    public enum From: String, Codable { 
        case undefined = "Undefined"
        case gvt = "GVT"
        case eth = "ETH"
        case btc = "BTC"
        case usd = "USD"
        case eur = "EUR"
    }
    public enum To: String, Codable { 
        case undefined = "Undefined"
        case gvt = "GVT"
        case eth = "ETH"
        case btc = "BTC"
        case usd = "USD"
        case eur = "EUR"
    }
    public var amount: Double?
    public var from: From
    public var to: To


    
    public init(amount: Double?, from: From, to: To) {
        self.amount = amount
        self.from = from
        self.to = to
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(amount, forKey: "amount")
        try container.encode(from, forKey: "from")
        try container.encode(to, forKey: "to")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        amount = try container.decodeIfPresent(Double.self, forKey: "amount")
        from = try container.decode(From.self, forKey: "from")
        to = try container.decode(To.self, forKey: "to")
    }
}

