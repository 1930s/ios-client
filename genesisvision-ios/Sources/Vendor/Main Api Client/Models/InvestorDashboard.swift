//
// InvestorDashboard.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class InvestorDashboard: Codable {

    public var investmentPrograms: [InvestmentProgramDashboardInvestor]?
    public var profitFromPrograms: Double?
    public var investedAmount: Double?
    public var totalPortfolioAmount: Double?


    
    public init(investmentPrograms: [InvestmentProgramDashboardInvestor]?, profitFromPrograms: Double?, investedAmount: Double?, totalPortfolioAmount: Double?) {
        self.investmentPrograms = investmentPrograms
        self.profitFromPrograms = profitFromPrograms
        self.investedAmount = investedAmount
        self.totalPortfolioAmount = totalPortfolioAmount
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(investmentPrograms, forKey: "investmentPrograms")
        try container.encodeIfPresent(profitFromPrograms, forKey: "profitFromPrograms")
        try container.encodeIfPresent(investedAmount, forKey: "investedAmount")
        try container.encodeIfPresent(totalPortfolioAmount, forKey: "totalPortfolioAmount")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        investmentPrograms = try container.decodeIfPresent([InvestmentProgramDashboardInvestor].self, forKey: "investmentPrograms")
        profitFromPrograms = try container.decodeIfPresent(Double.self, forKey: "profitFromPrograms")
        investedAmount = try container.decodeIfPresent(Double.self, forKey: "investedAmount")
        totalPortfolioAmount = try container.decodeIfPresent(Double.self, forKey: "totalPortfolioAmount")
    }
}

