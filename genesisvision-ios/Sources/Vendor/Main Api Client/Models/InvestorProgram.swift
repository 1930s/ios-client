//
// InvestorProgram.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class InvestorProgram: Codable {

    public var investmentProgram: InvestmentProgramDetails?
    public var requests: [InvestmentRequest]?
    public var totalIn: Double?
    public var totalOut: Double?


    
    public init(investmentProgram: InvestmentProgramDetails?, requests: [InvestmentRequest]?, totalIn: Double?, totalOut: Double?) {
        self.investmentProgram = investmentProgram
        self.requests = requests
        self.totalIn = totalIn
        self.totalOut = totalOut
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(investmentProgram, forKey: "investmentProgram")
        try container.encodeIfPresent(requests, forKey: "requests")
        try container.encodeIfPresent(totalIn, forKey: "totalIn")
        try container.encodeIfPresent(totalOut, forKey: "totalOut")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        investmentProgram = try container.decodeIfPresent(InvestmentProgramDetails.self, forKey: "investmentProgram")
        requests = try container.decodeIfPresent([InvestmentRequest].self, forKey: "requests")
        totalIn = try container.decodeIfPresent(Double.self, forKey: "totalIn")
        totalOut = try container.decodeIfPresent(Double.self, forKey: "totalOut")
    }
}

