//
// ManagerToken.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class ManagerToken: Codable {

    public var id: UUID?
    public var tokenSymbol: String?
    public var tokenName: String?
    public var tokenAddress: String?


    
    public init(id: UUID?, tokenSymbol: String?, tokenName: String?, tokenAddress: String?) {
        self.id = id
        self.tokenSymbol = tokenSymbol
        self.tokenName = tokenName
        self.tokenAddress = tokenAddress
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(tokenSymbol, forKey: "tokenSymbol")
        try container.encodeIfPresent(tokenName, forKey: "tokenName")
        try container.encodeIfPresent(tokenAddress, forKey: "tokenAddress")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decodeIfPresent(UUID.self, forKey: "id")
        tokenSymbol = try container.decodeIfPresent(String.self, forKey: "tokenSymbol")
        tokenName = try container.decodeIfPresent(String.self, forKey: "tokenName")
        tokenAddress = try container.decodeIfPresent(String.self, forKey: "tokenAddress")
    }
}

