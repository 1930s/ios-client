//
// WalletAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class WalletAPI {
    /**

     - parameter filter: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiInvestorWalletTransactionsPost(filter: TransactionsFilter? = nil, completion: @escaping ((_ data: WalletTransactionsViewModel?,_ error: Error?) -> Void)) {
        apiInvestorWalletTransactionsPostWithRequestBuilder(filter: filter).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /api/investor/wallet/transactions
     - examples: [{contentType=application/json, example={
  "total" : 6,
  "transactions" : [ {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "amount" : 0.8008281904610115,
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "type" : "Deposit"
  }, {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "amount" : 0.8008281904610115,
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "type" : "Deposit"
  } ]
}}]
     
     - parameter filter: (body)  (optional)

     - returns: RequestBuilder<WalletTransactionsViewModel> 
     */
    open class func apiInvestorWalletTransactionsPostWithRequestBuilder(filter: TransactionsFilter? = nil) -> RequestBuilder<WalletTransactionsViewModel> {
        let path = "/api/investor/wallet/transactions"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: filter)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<WalletTransactionsViewModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter filter: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiManagerWalletTransactionsPost(filter: TransactionsFilter? = nil, completion: @escaping ((_ data: WalletTransactionsViewModel?,_ error: Error?) -> Void)) {
        apiManagerWalletTransactionsPostWithRequestBuilder(filter: filter).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /api/manager/wallet/transactions
     - examples: [{contentType=application/json, example={
  "total" : 6,
  "transactions" : [ {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "amount" : 0.8008281904610115,
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "type" : "Deposit"
  }, {
    "date" : "2000-01-23T04:56:07.000+00:00",
    "amount" : 0.8008281904610115,
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "type" : "Deposit"
  } ]
}}]
     
     - parameter filter: (body)  (optional)

     - returns: RequestBuilder<WalletTransactionsViewModel> 
     */
    open class func apiManagerWalletTransactionsPostWithRequestBuilder(filter: TransactionsFilter? = nil) -> RequestBuilder<WalletTransactionsViewModel> {
        let path = "/api/manager/wallet/transactions"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: filter)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<WalletTransactionsViewModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
