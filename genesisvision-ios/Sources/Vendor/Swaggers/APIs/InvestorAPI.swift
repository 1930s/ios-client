//
// InvestorAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class InvestorAPI {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiInvestorDashboardGet(completion: @escaping ((_ data: InvestorDashboard?,_ error: Error?) -> Void)) {
        apiInvestorDashboardGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/investor/dashboard
     - examples: [{contentType=application/json, example={
  "programs" : [ {
    "totalIn" : 5.962133916683182,
    "investmentProgram" : {
      "ordersCount" : 6,
      "totalProfit" : 1.4658129805029452,
      "isEnabled" : true,
      "rating" : 0.8008281904610115,
      "logo" : "logo",
      "description" : "description",
      "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "managerTokensId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "managerAccountId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
    },
    "requests" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "amount" : 1.4658129805029452,
      "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "type" : "Invest",
      "status" : "New"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "amount" : 1.4658129805029452,
      "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "type" : "Invest",
      "status" : "New"
    } ],
    "totalOut" : 5.637376656633329
  }, {
    "totalIn" : 5.962133916683182,
    "investmentProgram" : {
      "ordersCount" : 6,
      "totalProfit" : 1.4658129805029452,
      "isEnabled" : true,
      "rating" : 0.8008281904610115,
      "logo" : "logo",
      "description" : "description",
      "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "managerTokensId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "managerAccountId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
    },
    "requests" : [ {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "amount" : 1.4658129805029452,
      "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "type" : "Invest",
      "status" : "New"
    }, {
      "date" : "2000-01-23T04:56:07.000+00:00",
      "amount" : 1.4658129805029452,
      "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "type" : "Invest",
      "status" : "New"
    } ],
    "totalOut" : 5.637376656633329
  } ]
}}]

     - returns: RequestBuilder<InvestorDashboard> 
     */
    open class func apiInvestorDashboardGetWithRequestBuilder() -> RequestBuilder<InvestorDashboard> {
        let path = "/api/investor/dashboard"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<InvestorDashboard>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter model: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiInvestorInvestmentsInvestPost(model: InvestViewModel? = nil, completion: @escaping ((_ data: ProfileShortViewModel?,_ error: Error?) -> Void)) {
        apiInvestorInvestmentsInvestPostWithRequestBuilder(model: model).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /api/investor/investments/invest
     - examples: [{contentType=application/json, example={
  "balance" : 0.8008281904610115,
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "email" : "email"
}}]
     
     - parameter model: (body)  (optional)

     - returns: RequestBuilder<ProfileShortViewModel> 
     */
    open class func apiInvestorInvestmentsInvestPostWithRequestBuilder(model: InvestViewModel? = nil) -> RequestBuilder<ProfileShortViewModel> {
        let path = "/api/investor/investments/invest"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ProfileShortViewModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter filter: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiInvestorInvestmentsPost(filter: InvestmentsFilter? = nil, completion: @escaping ((_ data: InvestmentProgramsViewModel?,_ error: Error?) -> Void)) {
        apiInvestorInvestmentsPostWithRequestBuilder(filter: filter).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /api/investor/investments
     - examples: [{contentType=application/json, example={
  "total" : 0,
  "investments" : [ {
    "investment" : {
      "feeEntrance" : 7.061401241503109,
      "period" : 5,
      "feeManagement" : 2.3021358869347655,
      "totalProfit" : 7.386281948385884,
      "rating" : 2.027123023002322,
      "description" : "description",
      "dateFrom" : "2000-01-23T04:56:07.000+00:00",
      "investMinAmount" : 9.301444243932576,
      "ordersCount" : 4,
      "isEnabled" : true,
      "dateTo" : "2000-01-23T04:56:07.000+00:00",
      "logo" : "logo",
      "feeSuccess" : 5.637376656633329,
      "lastPeriod" : {
        "number" : 0,
        "investmentRequest" : [ {
          "date" : "2000-01-23T04:56:07.000+00:00",
          "amount" : 1.4658129805029452,
          "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "type" : "Invest",
          "status" : "New"
        }, {
          "date" : "2000-01-23T04:56:07.000+00:00",
          "amount" : 1.4658129805029452,
          "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "type" : "Invest",
          "status" : "New"
        } ],
        "dateTo" : "2000-01-23T04:56:07.000+00:00",
        "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
        "dateFrom" : "2000-01-23T04:56:07.000+00:00",
        "startBalance" : 6.027456183070403,
        "status" : "Planned"
      },
      "investMaxAmount" : 3.616076749251911,
      "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "managerTokensId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "managerAccountId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
    },
    "account" : {
      "brokerTradeServer" : {
        "brokerId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
        "name" : "name",
        "host" : "host",
        "registrationDate" : "2000-01-23T04:56:07.000+00:00",
        "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
        "type" : "Undefined",
        "broker" : {
          "name" : "name",
          "registrationDate" : "2000-01-23T04:56:07.000+00:00",
          "description" : "description",
          "logo" : "logo",
          "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        }
      },
      "ipfsHash" : "ipfsHash",
      "registrationDate" : "2000-01-23T04:56:07.000+00:00",
      "currency" : "currency",
      "isConfirmed" : true,
      "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "login" : "login"
    },
    "token" : {
      "tokenAddress" : "tokenAddress",
      "tokenSymbol" : "tokenSymbol",
      "tokenName" : "tokenName",
      "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
    }
  }, {
    "investment" : {
      "feeEntrance" : 7.061401241503109,
      "period" : 5,
      "feeManagement" : 2.3021358869347655,
      "totalProfit" : 7.386281948385884,
      "rating" : 2.027123023002322,
      "description" : "description",
      "dateFrom" : "2000-01-23T04:56:07.000+00:00",
      "investMinAmount" : 9.301444243932576,
      "ordersCount" : 4,
      "isEnabled" : true,
      "dateTo" : "2000-01-23T04:56:07.000+00:00",
      "logo" : "logo",
      "feeSuccess" : 5.637376656633329,
      "lastPeriod" : {
        "number" : 0,
        "investmentRequest" : [ {
          "date" : "2000-01-23T04:56:07.000+00:00",
          "amount" : 1.4658129805029452,
          "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "type" : "Invest",
          "status" : "New"
        }, {
          "date" : "2000-01-23T04:56:07.000+00:00",
          "amount" : 1.4658129805029452,
          "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "type" : "Invest",
          "status" : "New"
        } ],
        "dateTo" : "2000-01-23T04:56:07.000+00:00",
        "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
        "dateFrom" : "2000-01-23T04:56:07.000+00:00",
        "startBalance" : 6.027456183070403,
        "status" : "Planned"
      },
      "investMaxAmount" : 3.616076749251911,
      "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "managerTokensId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "managerAccountId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
    },
    "account" : {
      "brokerTradeServer" : {
        "brokerId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
        "name" : "name",
        "host" : "host",
        "registrationDate" : "2000-01-23T04:56:07.000+00:00",
        "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
        "type" : "Undefined",
        "broker" : {
          "name" : "name",
          "registrationDate" : "2000-01-23T04:56:07.000+00:00",
          "description" : "description",
          "logo" : "logo",
          "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        }
      },
      "ipfsHash" : "ipfsHash",
      "registrationDate" : "2000-01-23T04:56:07.000+00:00",
      "currency" : "currency",
      "isConfirmed" : true,
      "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
      "login" : "login"
    },
    "token" : {
      "tokenAddress" : "tokenAddress",
      "tokenSymbol" : "tokenSymbol",
      "tokenName" : "tokenName",
      "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
    }
  } ]
}}]
     
     - parameter filter: (body)  (optional)

     - returns: RequestBuilder<InvestmentProgramsViewModel> 
     */
    open class func apiInvestorInvestmentsPostWithRequestBuilder(filter: InvestmentsFilter? = nil) -> RequestBuilder<InvestmentProgramsViewModel> {
        let path = "/api/investor/investments"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: filter)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<InvestmentProgramsViewModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter model: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiInvestorInvestmentsWithdrawPost(model: InvestViewModel? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        apiInvestorInvestmentsWithdrawPostWithRequestBuilder(model: model).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - POST /api/investor/investments/withdraw
     
     - parameter model: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiInvestorInvestmentsWithdrawPostWithRequestBuilder(model: InvestViewModel? = nil) -> RequestBuilder<Void> {
        let path = "/api/investor/investments/withdraw"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
