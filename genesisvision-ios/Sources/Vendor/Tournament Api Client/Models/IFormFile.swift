//
// IFormFile.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class IFormFile: Codable {

    public var contentType: String?
    public var contentDisposition: String?
    public var headers: [String:[String]]?
    public var length: Int64?
    public var name: String?
    public var fileName: String?


    
    public init(contentType: String?, contentDisposition: String?, headers: [String:[String]]?, length: Int64?, name: String?, fileName: String?) {
        self.contentType = contentType
        self.contentDisposition = contentDisposition
        self.headers = headers
        self.length = length
        self.name = name
        self.fileName = fileName
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(contentType, forKey: "contentType")
        try container.encodeIfPresent(contentDisposition, forKey: "contentDisposition")
        try container.encodeIfPresent(headers, forKey: "headers")
        try container.encodeIfPresent(length, forKey: "length")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(fileName, forKey: "fileName")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        contentType = try container.decodeIfPresent(String.self, forKey: "contentType")
        contentDisposition = try container.decodeIfPresent(String.self, forKey: "contentDisposition")
        headers = try container.decodeIfPresent([String:[String]].self, forKey: "headers")
        length = try container.decodeIfPresent(Int64.self, forKey: "length")
        name = try container.decodeIfPresent(String.self, forKey: "name")
        fileName = try container.decodeIfPresent(String.self, forKey: "fileName")
    }
}

