//
// ParticipantRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class ParticipantRequest: Codable {

    public var id: UUID?
    public var email: String?
    public var name: String?
    public var ethAddress: String?
    public var avatar: String?


    
    public init(id: UUID?, email: String?, name: String?, ethAddress: String?, avatar: String?) {
        self.id = id
        self.email = email
        self.name = name
        self.ethAddress = ethAddress
        self.avatar = avatar
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(email, forKey: "email")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(ethAddress, forKey: "ethAddress")
        try container.encodeIfPresent(avatar, forKey: "avatar")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decodeIfPresent(UUID.self, forKey: "id")
        email = try container.decodeIfPresent(String.self, forKey: "email")
        name = try container.decodeIfPresent(String.self, forKey: "name")
        ethAddress = try container.decodeIfPresent(String.self, forKey: "ethAddress")
        avatar = try container.decodeIfPresent(String.self, forKey: "avatar")
    }
}

