//
// TradeServerViewModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class TradeServerViewModel: Codable {

    public var tournament: Tournament?
    public var participantRequest: [ParticipantRequest]?
    public var tradeAccounts: [TradeAccount]?


    
    public init(tournament: Tournament?, participantRequest: [ParticipantRequest]?, tradeAccounts: [TradeAccount]?) {
        self.tournament = tournament
        self.participantRequest = participantRequest
        self.tradeAccounts = tradeAccounts
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(tournament, forKey: "tournament")
        try container.encodeIfPresent(participantRequest, forKey: "participantRequest")
        try container.encodeIfPresent(tradeAccounts, forKey: "tradeAccounts")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        tournament = try container.decodeIfPresent(Tournament.self, forKey: "tournament")
        participantRequest = try container.decodeIfPresent([ParticipantRequest].self, forKey: "participantRequest")
        tradeAccounts = try container.decodeIfPresent([TradeAccount].self, forKey: "tradeAccounts")
    }
}

