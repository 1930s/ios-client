//
// TradesFilter.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class TradesFilter: Codable {

    public enum Direction: String, Codable { 
        case buy = "Buy"
        case sell = "Sell"
    }
    public var participantId: UUID
    public var symbol: String?
    public var direction: Direction?
    public var skip: Int?
    public var take: Int?


    
    public init(participantId: UUID, symbol: String?, direction: Direction?, skip: Int?, take: Int?) {
        self.participantId = participantId
        self.symbol = symbol
        self.direction = direction
        self.skip = skip
        self.take = take
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(participantId, forKey: "participantId")
        try container.encodeIfPresent(symbol, forKey: "symbol")
        try container.encodeIfPresent(direction, forKey: "direction")
        try container.encodeIfPresent(skip, forKey: "skip")
        try container.encodeIfPresent(take, forKey: "take")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        participantId = try container.decode(UUID.self, forKey: "participantId")
        symbol = try container.decodeIfPresent(String.self, forKey: "symbol")
        direction = try container.decodeIfPresent(Direction.self, forKey: "direction")
        skip = try container.decodeIfPresent(Int.self, forKey: "skip")
        take = try container.decodeIfPresent(Int.self, forKey: "take")
    }
}

