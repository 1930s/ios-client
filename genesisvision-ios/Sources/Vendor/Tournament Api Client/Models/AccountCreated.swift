//
// AccountCreated.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class AccountCreated: Codable {

    public var participantId: UUID?
    public var tradeServerId: UUID?
    public var login: Int64?
    public var password: String?
    public var startBalance: Double?


    
    public init(participantId: UUID?, tradeServerId: UUID?, login: Int64?, password: String?, startBalance: Double?) {
        self.participantId = participantId
        self.tradeServerId = tradeServerId
        self.login = login
        self.password = password
        self.startBalance = startBalance
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(participantId, forKey: "participantId")
        try container.encodeIfPresent(tradeServerId, forKey: "tradeServerId")
        try container.encodeIfPresent(login, forKey: "login")
        try container.encodeIfPresent(password, forKey: "password")
        try container.encodeIfPresent(startBalance, forKey: "startBalance")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        participantId = try container.decodeIfPresent(UUID.self, forKey: "participantId")
        tradeServerId = try container.decodeIfPresent(UUID.self, forKey: "tradeServerId")
        login = try container.decodeIfPresent(Int64.self, forKey: "login")
        password = try container.decodeIfPresent(String.self, forKey: "password")
        startBalance = try container.decodeIfPresent(Double.self, forKey: "startBalance")
    }
}

